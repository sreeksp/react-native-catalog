'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./../react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class,
    _temp,
    _jsxFileName = '/Users/spalaparty/react/ebayPassport/node_modules/react-native-tab-navigator/Badge.js';

var _reactNative = require('react-native');

var _Layout = require('./Layout');

var _Layout2 = _interopRequireDefault(_Layout);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
  Badge: {
    displayName: 'Badge'
  }
};

var _reactTransformHmrLibIndexJs2 = (0, _index2.default)({
  filename: '/Users/spalaparty/react/ebayPassport/node_modules/react-native-tab-navigator/Badge.js',
  components: _components,
  locals: [module],
  imports: [_react3.default]
});

function _wrapComponent(id) {
  return function (Component) {
    return _reactTransformHmrLibIndexJs2(Component, id);
  };
}

var Badge = _wrapComponent('Badge')((_temp = _class = function (_React$Component) {
  _inherits(Badge, _React$Component);

  function Badge(props, context) {
    _classCallCheck(this, Badge);

    var _this = _possibleConstructorReturn(this, (Badge.__proto__ || Object.getPrototypeOf(Badge)).call(this, props, context));

    _this.state = {
      computedSize: null
    };


    _this._handleLayout = _this._handleLayout.bind(_this);
    return _this;
  }

  _createClass(Badge, [{
    key: 'render',
    value: function render() {
      var computedSize = this.state.computedSize;

      var style = {};
      if (!computedSize) {
        style.opacity = 0;
      } else {
        style.width = Math.max(computedSize.height, computedSize.width);
      }

      return _react3.default.createElement(
        _reactNative.Text,
        _extends({}, this.props, {
          numberOfLines: 1,
          onLayout: this._handleLayout,
          style: [styles.container, this.props.style, style], __source: {
            fileName: _jsxFileName,
            lineNumber: 34
          }
        }),
        this.props.children
      );
    }
  }, {
    key: '_handleLayout',
    value: function _handleLayout(event) {
      var _event$nativeEvent$la = event.nativeEvent.layout,
          width = _event$nativeEvent$la.width,
          height = _event$nativeEvent$la.height;
      var computedSize = this.state.computedSize;

      if (computedSize && computedSize.height === height && computedSize.width === width) {
        return;
      }

      this.setState({
        computedSize: { width: width, height: height }
      });

      if (this.props.onLayout) {
        this.props.onLayout(event);
      }
    }
  }]);

  return Badge;
}(_react3.default.Component), _class.propTypes = _reactNative.Text.propTypes, _temp));

exports.default = Badge;


var styles = _reactNative.StyleSheet.create({
  container: {
    fontSize: 12,
    color: '#fff',
    backgroundColor: 'rgb(0, 122, 255)',
    lineHeight: 15,
    textAlign: 'center',
    borderWidth: 1 + _Layout2.default.pixel,
    borderColor: '#fefefe',
    borderRadius: 17 / 2,
    overflow: 'hidden'
  }
});